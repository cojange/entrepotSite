<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.site.client.member.individual.dao.ClMDao">

<!--=======================구매페이지회원검색==============================-->
<select id="memberSellSelect" parameterType="String" resultType="member">
	/*sell - memberSelect*/
	 select M_NUM,M_ID,M_NAME,M_BIRTH,M_GENDER,M_JOB,M_ADDRESS,M_ZIPCODE,M_PHONE,M_EMAIL,M_DATE,M_UPDATE,PWDCHECK,QUIZ,ANS,CART,WHISH,GRADE,MT
	 from member
		where m_num=#{m_num}
</select>
<select id="groupMemberSellSelect" parameterType="String" resultType="groupMember">
	/*sell - memberSelect*/
	 select M_NUM,M_ID,M_NAME,COM_NO,LEADER_NAME,M_ADDRESS,M_ZIPCODE,CHAR_NAME,CHAR_PHONE,CHAR_EMAIL,ACC_NAME,ACC_PHONE,ACC_EMAIL,M_JOB,LEADER_PHONE,M_DATE,M_UPDATE,FAX,CART,WHISH,MT
	 from group_member
		where m_num=#{m_num}
</select>
	<!--=======================개인회원시작==============================-->
	<select id="memberSelect" parameterType="String" resultType="member">
		/* member - memberSelect */
		<!-- select m_num,m_id,m_pwd,m_name,m_birth,m_email
		from member where m_id=#{m_id} -->
		<!-- SELECT m_id FROM 
		(SELECT m_id FROM GROUP_MEMBER UNION ALL SELECT m_id FROM member ) 
		GROUP BY m_id HAVING m_id=#{m_id} -->
		select m_num, m_id, m_pwd, m_name,m_birth,m_email,m_phone
		from member
		where m_id = #{m_id}
	</select>
	
	<update id="memberUpdate" parameterType="member">
		update member set 
		<if test="m_pwd != null and m_pwd != ''">
		m_pwd=#{m_pwd}, 
		</if>
		m_phone=#{m_phone}, 
		m_email=#{m_email} 
		where m_id=#{m_id}
	</update> 
	
	<insert id="memberInsert" parameterType="member">
		/*member - memberInsert*/
		 <selectKey keyProperty="m_num" resultType="java.lang.String" order="BEFORE">
			select 'p_'||member_seq.nextval from dual
		</selectKey> 
		insert into member(m_num,m_id,m_pwd,m_name,m_birth,m_gender,m_email
		,m_phone,m_job,m_zipcode,m_address,m_date,quiz,ans,cart,whish,mt)
		values(#{m_num},#{m_id},#{m_pwd},#{m_name}
		,#{m_birth},#{m_gender},#{m_email},#{m_phone}
		,#{m_job},#{m_zipcode},#{m_address},sysdate,#{quiz},#{ans},'cart_'||member_seq.nextval,'whish_'||member_seq.nextval,'개인')
	</insert>
	
	<delete id="memberDelete" parameterType="String">
	delete from member where m_id = #{m_id}
	</delete>
	<!--=======================개인회원끝==============================-->
	
	<!--=======================단체회원시작==============================-->
	<select id="groupMemberSelect" parameterType="String" resultType="groupMember">
		/* groupMember - groupMemberSelect */
		select m_num,m_id,m_pwd,m_name
		from group_member where m_id=#{m_id}
	</select>
	
	<update id="groupMemberUpdate" parameterType="member">
		update group_member set 
		<if test="m_pwd != null and m_pwd != ''">
		m_pwd=#{m_pwd}, 
		</if>
		m_phone=#{m_phone}, 
		m_email=#{m_email} 
		where m_id=#{m_id}
	</update> 
	
	<select id="groupComMemberSelect" parameterType="String" resultType="groupMember">
		/* groupMember - groupComMemberSelect */
		select m_name,com_no
		from group_member where com_no=#{com_no}
	</select>
	
	
	<insert id="groupMemberInsert" parameterType="groupMember">
		/* groupMember - groupMemberInsert */
		<selectKey keyProperty="m_num" resultType="java.lang.String" order="BEFORE">
			select 'g_'||group_member_seq.nextval from dual
		</selectKey>
		insert into group_member(m_num,m_id,m_pwd,m_name,com_no,leader_name,leader_phone,
		m_address,m_zipcode,char_name,char_phone,char_email,acc_name,acc_phone,acc_email,
		m_job,m_date,fax,cart,whish,mt)
		values(#{m_num},#{m_id},#{m_pwd},#{m_name},#{com_no},#{leader_name},#{leader_phone},
		#{m_address},#{m_zipcode},#{char_name},#{char_phone},#{char_email},#{acc_name},#{acc_phone},#{acc_email},
		#{m_job},sysdate,#{fax},'cart_'||group_member_seq.nextval||'g','whish_'||group_member_seq.nextval||'g','단체')
	</insert>
	<!--=======================단체회원끝==============================-->
	
	<!--=======================암호화작업 및 비교시작==============================-->
	<select id="securitySelect" parameterType="String" resultType="security">
		/* security - securitySelect */
		select m_id,salt from security where m_id=#{m_id}
	</select>
	
	<insert id="securityInsert" parameterType="security">
		/*security - securityInsert*/
		insert into security(m_id,salt)
		values(#{m_id},#{salt})
	</insert>
	
	<delete id="securityDelete" parameterType="String">
	delete from security where m_id = #{m_id}
	</delete>
	<!--=======================암호화작업 및 비교끝==============================-->
	
</mapper>