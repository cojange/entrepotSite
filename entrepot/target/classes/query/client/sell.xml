<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.site.client.member.sell.dao.ClSellDAO">

	<insert id="paymentInsert" parameterType="sell" useGeneratedKeys="true" keyProperty="order_num">
		/*member - memberInsert*/
		 <selectKey keyProperty="order_num" resultType="java.lang.String" order="BEFORE">
			SELECT to_char(sysdate,'yyyy/mm/dd')||'_'||sell_seq.nextval from dual
		</selectKey>
		Insert into SELL (ORDER_NUM,SELL_EA,SELL_DATE,
		SELL_MONEY,BANK_NAME,BANK,COUPON_NO,M_NUM,MT,ENDDATE) 
		values (#{order_num},to_number(#{sell_ea}),sysdate,
		to_number(#{sell_money}),#{bank_name},#{bank},
		#{coupon_no},#{m_num},#{mt},to_char(trunc(add_months(sysdate, 12), 'dd'),'yyyy/mm/dd'))
		
	</insert>

	<select id="getOrder_Money" parameterType="orderList" resultType="int">
	/*단품 단가 주입조회*/
		select pd_cost from product where pd_num = #{pd_num}
	</select>

	<insert id="orderListInsert" parameterType="orderList">
		insert into order_list(order_num, pd_num, order_date, order_ea, order_money, order_ok, transit_num)
		values (#{order_num}, #{pd_num}, sysdate, to_number(#{order_ea}), to_number(#{order_money}), '주문대기_'||to_char(sysdate,'yymmdd_hh24miss'),
		'30232-851-'||transit_seq.nextval)
	</insert>
	<delete id="paymentBack" parameterType="sell">
	/*결재완료 부결시 결제 취소*/
		delete from sell where order_num = #{order_num}
	</delete>
	<insert id="refundInsert" parameterType="rcvo">
	/*환불 신청 */
		insert into refund (r_num, r_date, r_money, r_ok, r_ieu, bank, bank_num, r_ea, order_num, pd_num)
		values ('r_'||refund_seq.nextval ,sysdate,#{r_money},'환불대기_'||to_char(sysdate,'yymmdd_hh24miss'),
		<if test="ieu!=''">
			#{ieu},
		</if>
		<if test="ieu==''">
			#{usermemo},
		</if>
		#{bank},#{bank_num},to_number(#{ea}),#{order_num},#{pd_num})
	</insert>
	<insert id="changeInsert" parameterType="rcvo">
	/*교환 신청*/
		insert into change(chg_num, chg_date, chg_ok, chg_ieu, chg_ea, order_num, pd_num, transit_num)
		values('chg_'||change_seq.nextval,sysdate,'교환대기_'||to_char(sysdate,'yymmdd_hh24miss'),
		<if test="ieu!=''">
			#{ieu},
		</if>
		<if test="ieu==''">
			#{usermemo},
		</if>
		to_number(#{ea}),#{order_num},#{pd_num},'30232-851-'||transit_seq.nextval)
	</insert>
	<select id="getR_money" parameterType="rcvo" resultType="int">
	/*상품원가 주입 가져오기*/
		select pd_sale from product where pd_num =#{pd_num}
	</select>
	<select id="getExtraPeriod" parameterType="rcvo" resultType="int">
	/*남은 개월수 가져오기*/
		select substr(mg_period,instr(mg_period,'(')+1,2)-(substr(mg_period,instr(mg_period,'(')+1,2)-cnt) extraperiod from magazine m
	    join (select count(pd_num) cnt, substr(pd_num,0,instr(pd_num,'-')-1) mg_num from order_list where order_num = #{order_num} and pd_num =#{pd_num} group by pd_num) p
	    on m.mg_num = p.mg_num
	</select>
	<select id="getOrgPeriod" parameterType="rcvo" resultType="int">
	/*전체기간*/
		select substr(mg_period,instr(mg_period,'(')+1,2) from magazine where mg_num = substr(#{pd_num},0,instr(#{pd_num},'-')-1)
	</select>
	
	<select id="getAd_money" parameterType="rcvo" resultType="int">
	/*원가 가져오기*/
		select pd_cost from product where pd_num=#{pd_num}
	</select>
	<update id="updateOrderf" parameterType="rcvo">
		/*환불 교환시 업댓*/
		update order_list set order_ok = '환불대기_'||to_char(sysdate,'yymmdd_hh24miss') where order_num=#{order_num} and pd_num=#{pd_num}
	</update>
	<update id="updateOrderc" parameterType="rcvo">
		/*환불 교환시 업댓*/
		update order_list set order_ok = '교환대기_'||to_char(sysdate,'yymmdd_hh24miss') where order_num=#{order_num} and pd_num=#{pd_num}
	</update>
	
</mapper>